// Generated by CoffeeScript 1.8.0
(function() {
  var app, dooutput, express, helpers, operations, port, sanitizer, templateHTML, templateXML;

  express = require('express');

  sanitizer = require('sanitizer');

  operations = require('./lib/operations');

  helpers = require('./lib/helpers');

  templateHTML = function(topPart, bottomPart,imagePath) {
    return '<html> '+
    '<head> '+
      '<title>Meme Service</title> '+
      '<meta charset="utf-8"> '+
      '<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css" rel="stylesheet"> '+
    '</head> '+
    '<body style="margin-top:40px;"> '+
      '<canvas id="memeCanvas" width="400" height="400"> '+
      '</canvas> '+
      '<script> '+
        'dumbshit = "dumbass"; '+
        'var topPart = "' + sanitizer.escape(topPart) + '"; '+
        'var bottomPart = "' + sanitizer.escape(bottomPart) + '"; '+
        'var myImage = new Image(); '+
        'myImage.src ="'+imagePath+'"; '+
        'myImage.width = 400; ' +
        'myImage.height = 400; '+
        'var c = document.getElementById("memeCanvas"); '+
        'var ctx = c.getContext("2d"); '+
        'ctx.font="50px Impact"; '+
        'ctx.fillText(topPart,10,40); '+
        'ctx.fillText(bottomPart, 10, 350); '+
        'myImage.onload = function(thing){ '+
          'ctx.drawImage(myImage,0,0); '+
          'ctx.font="50px Impact"; '+
          'ctx.fillText(topPart,10,40); '+
          'ctx.fillText(bottomPart, 10, 350); '+
        '} '+
    '</script> '+
    '<!-- <script> !function(a,b,c,d,e,f,g){ a.GoogleAnalyticsObject=e,a[e]=a[e]||function(){(a[e].q=a[e].q||[]).push(arguments)},a[e].l=1*new Date,f=b.createElement(c),g=b.getElementsByTagName(c)[0],f.async=1,f.src=d,g.parentNode.insertBefore(f,g)}(window,document,"script","//www.google-analytics.com/analytics.js","ga"),ga("create","UA-42551488-1","herokuapp.com"),ga("send","pageview"); </script> --> '+
    '</body> '+
    '</html>';
  };

  // templateXML = function(message, subtitle) {
  //   return '<?xml version="1.0" encoding="UTF-8"?> <foaas:response xmlns:foaas="http://foaas.com/fuckoff"> <foaas:message>' + helpers.escapeXML(message) + '</foaas:message> <foaas:subtitle>' + helpers.escapeXML(subtitle) + '</foaas:subtitle> </foaas:response>';
  // };

  dooutput = function(res, topPart, bottomPart, imagePath) {
    return res.format({
      // "text/plain": function() {
      //   return res.send("" + topPart + " " + bottomPart);
      // },
      // "application/json": function() {
      //   return res.send(JSON.stringify({
      //     message: message,
      //     subtitle: subtitle
      //   }));
      // },
      "text/html": function() {
        return res.send(templateHTML(topPart, bottomPart, imagePath));
      }
      // "application/xml": function() {
      //   return res.send(templateXML(message, subtitle));
      // }
    });
  };

  app = express();

  app.use(express.bodyParser());

  app.use(express.methodOverride());

  app.use(function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type');
    return next();
  });

  app.use(app.router);

  app.use(express["static"]('./public'));

  app.use(function(req, res) {
    return res.sendfile("./public/index.html");
  });

  app.options("*", function(req, res) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type');
    return res.end();
  });

  app.get('/version', function(req, res) {
    return res.format({
      "text/plain": function() {
        return res.send("FOAAS Version " + helpers.VERSION);
      },
      "application/json": function() {
        return res.send(JSON.stringify({
          version: helpers.VERSION
        }));
      },
      "text/html": function() {
        return res.send(templateHTML("Version " + helpers.VERSION, 'FOAAS'));
      },
      "application/xml": function() {
        return res.send(templateXML("Version " + helpers.VERSION, 'FOAAS'));
      }
    });
  });

  app.get('/off/:name/:from', function(req, res) {
    var message, subtitle;
    message = "Fuck off, " + req.params.name + ".";
    subtitle = "- " + req.params.from;
    return dooutput(res, message, subtitle);
  });

  app.get('/fat/:top/:bottom', function(req, res) {
    return dooutput(res,req.params.top, req.params.bottom, "/images/fat-bastard.jpg");
  });

  app.get('/wat/:top/:bottom', function(req, res) {
    return dooutput(res,req.params.top, req.params.bottom, "/images/wat.jpg");
  });


  /*
    Additional routes should go above the catch all /:thing/ route
   */

  operations(app);

  port = process.env.PORT || 5000;

  app.listen(port);

  console.log("FOAAS Started on port " + port);

}).call(this);
